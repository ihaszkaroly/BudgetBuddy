name: Build & Deploy to GitHub Pages

on:
  push:
    branches:
      - main     # or 'master' if that’s your default

permissions:
  contents: read   # allows checkout
  pages: write     # allows the deploy step

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) clone your code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: true

      # 2) install the correct .NET SDK (match your global.json)
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'   # or '7.0.x' if you update global.json

      # 3) restore any dotnet global tools (e.g. fable-compiler)
      - name: Restore .NET tools
        run: dotnet tool restore

      # 4) restore C# package references
      - name: Restore .NET packages
        run: dotnet restore src/App.fsproj

      # 5) compile F# -> JavaScript once
      - name: Compile Fable to JS
        run: dotnet fable src/App.fsproj --optimize --outDir src

      # 6) bring in Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # 7) install your JS dependencies
      - name: Install npm dependencies
        run: npm ci

      # 8) bundle your frontend
      #    - if you’re still on Webpack:
      - name: Bundle with Webpack
        run: npx webpack --mode production --output-path docs

      #    - OR, if you’ve already switched over to Vite:
      # - name: Bundle with Vite
      #   run: npm run build

      # 9) push the `docs/` folder up to gh-pages
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
          publish_branch: gh-pages
